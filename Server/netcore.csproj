<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <RuntimeIdentifiers>win81-x64;osx-x64</RuntimeIdentifiers>
    <IsPackable>false</IsPackable>
    <TrimUnusedDependencies>true</TrimUnusedDependencies>
    <EnableDefaultContentItems>false</EnableDefaultContentItems>
    <Environment>Development</Environment>
  </PropertyGroup>

  <!-- Override the copying default content items -->
  <!-- default copy will copy all the json file into publish folder but we dont want these files to be copied -->
  <ItemGroup>
    <SettingsFile Include="Resources\$(Environment)\*.*" />
    <FixturesFile Include="Resources\Fixtures\*.*" />
    <DistFiles Include="..\wwwroot\**\*.*" />
    <ViewsFiles Include="Views\**\*.*" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.2.0" />
    <PackageReference Include="AutoMapper" Version="6.2.2" />
    <PackageReference Include="EntityFrameworkCore.Triggers" Version="1.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="2.0.1" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.0.0-*" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="2.0.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="2.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="2.0.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.0.1" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Packaging.Tools.Trimming" Version="1.1.0-*" PrivateAssets="All" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="2.0.0-*" />
    <PackageReference Include="StackExchange.Redis.StrongName" Version="1.2.7-*" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.1" />
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.2" />
    <DotNetCliToolReference Include="Microsoft.DotNet.Watcher.Tools" Version="2.0.0" />
  </ItemGroup>

  <Target Name="CopyFiles" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug'">
    <Message Importance="high" Text="Copying required files for $(Environment) with Debug configuration" />
    <Copy DestinationFolder="$(OutputPath)" SourceFiles="@(SettingsFile)" SkipUnchangedFiles="false" />
    <Copy DestinationFolder="$(OutputPath)" SourceFiles="@(FixturesFile)" SkipUnchangedFiles="false" />
  </Target>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('..\wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="cd .. &amp;&amp; node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="cd .. &amp;&amp; node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="PrepareForPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="cd .. &amp;&amp; node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="cd .. &amp;&amp; node node_modules/webpack/bin/webpack.js --env.prod" />
  </Target>

  <Target Name="CopyFiles" AfterTargets="PublishRunWebpack">
    <!-- copy settings file into publish folder -->
    <Copy SourceFiles="@(SettingsFile)" DestinationFolder="$(PublishDir)" SkipUnchangedFiles="false" />
    <!-- copy views into publish folder -->
    <Copy SourceFiles="@(DistFiles)" DestinationFiles="@(DistFiles->'$(PublishDir)\wwwroot\%(RecursiveDir)%(Filename)%(Extension)')" /> 
    <Copy SourceFiles="@(ViewsFiles)" DestinationFiles="@(ViewsFiles->'$(PublishDir)\Views\%(RecursiveDir)%(Filename)%(Extension)')" /> 
  </Target>

</Project>
